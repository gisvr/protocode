// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chain-contract/iost-contract.proto

package pbchaincontract // import "github.com/gisvr/protocode/chain-contract-go"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import shared_go "github.com/gisvr/protocode/shared-go"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SignAlgorithmType int32

const (
	SignAlgorithmType_Secp256k1 SignAlgorithmType = 0
	SignAlgorithmType_Ed25519   SignAlgorithmType = 1
)

var SignAlgorithmType_name = map[int32]string{
	0: "Secp256k1",
	1: "Ed25519",
}
var SignAlgorithmType_value = map[string]int32{
	"Secp256k1": 0,
	"Ed25519":   1,
}

func (x SignAlgorithmType) String() string {
	return proto.EnumName(SignAlgorithmType_name, int32(x))
}
func (SignAlgorithmType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_iost_contract_4ac5b02d38c46a9d, []int{0}
}

type IostAction struct {
	Contract             string   `protobuf:"bytes,1,opt,name=contract,proto3" json:"contract,omitempty"`
	ActionName           string   `protobuf:"bytes,2,opt,name=action_name,json=actionName,proto3" json:"action_name,omitempty"`
	Data                 string   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IostAction) Reset()         { *m = IostAction{} }
func (m *IostAction) String() string { return proto.CompactTextString(m) }
func (*IostAction) ProtoMessage()    {}
func (*IostAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_iost_contract_4ac5b02d38c46a9d, []int{0}
}
func (m *IostAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IostAction.Unmarshal(m, b)
}
func (m *IostAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IostAction.Marshal(b, m, deterministic)
}
func (dst *IostAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IostAction.Merge(dst, src)
}
func (m *IostAction) XXX_Size() int {
	return xxx_messageInfo_IostAction.Size(m)
}
func (m *IostAction) XXX_DiscardUnknown() {
	xxx_messageInfo_IostAction.DiscardUnknown(m)
}

var xxx_messageInfo_IostAction proto.InternalMessageInfo

func (m *IostAction) GetContract() string {
	if m != nil {
		return m.Contract
	}
	return ""
}

func (m *IostAction) GetActionName() string {
	if m != nil {
		return m.ActionName
	}
	return ""
}

func (m *IostAction) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type IostInvokeParam struct {
	Type                 shared_go.InvokeType `protobuf:"varint,1,opt,name=type,proto3,enum=shared.api.InvokeType" json:"type,omitempty"`
	PublicKey            string               `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	SeqId                string               `protobuf:"bytes,3,opt,name=seq_id,json=seqId,proto3" json:"seq_id,omitempty"`
	SignType             SignAlgorithmType    `protobuf:"varint,4,opt,name=sign_type,json=signType,proto3,enum=contract.api.SignAlgorithmType" json:"sign_type,omitempty"`
	SignedTransaction    []string             `protobuf:"bytes,5,rep,name=signed_transaction,json=signedTransaction,proto3" json:"signed_transaction,omitempty"`
	Actions              []*IostAction        `protobuf:"bytes,6,rep,name=actions,proto3" json:"actions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *IostInvokeParam) Reset()         { *m = IostInvokeParam{} }
func (m *IostInvokeParam) String() string { return proto.CompactTextString(m) }
func (*IostInvokeParam) ProtoMessage()    {}
func (*IostInvokeParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_iost_contract_4ac5b02d38c46a9d, []int{1}
}
func (m *IostInvokeParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IostInvokeParam.Unmarshal(m, b)
}
func (m *IostInvokeParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IostInvokeParam.Marshal(b, m, deterministic)
}
func (dst *IostInvokeParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IostInvokeParam.Merge(dst, src)
}
func (m *IostInvokeParam) XXX_Size() int {
	return xxx_messageInfo_IostInvokeParam.Size(m)
}
func (m *IostInvokeParam) XXX_DiscardUnknown() {
	xxx_messageInfo_IostInvokeParam.DiscardUnknown(m)
}

var xxx_messageInfo_IostInvokeParam proto.InternalMessageInfo

func (m *IostInvokeParam) GetType() shared_go.InvokeType {
	if m != nil {
		return m.Type
	}
	return shared_go.InvokeType_UNKOWN
}

func (m *IostInvokeParam) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *IostInvokeParam) GetSeqId() string {
	if m != nil {
		return m.SeqId
	}
	return ""
}

func (m *IostInvokeParam) GetSignType() SignAlgorithmType {
	if m != nil {
		return m.SignType
	}
	return SignAlgorithmType_Secp256k1
}

func (m *IostInvokeParam) GetSignedTransaction() []string {
	if m != nil {
		return m.SignedTransaction
	}
	return nil
}

func (m *IostInvokeParam) GetActions() []*IostAction {
	if m != nil {
		return m.Actions
	}
	return nil
}

type IostInvokeResult struct {
	Script               string   `protobuf:"bytes,1,opt,name=script,proto3" json:"script,omitempty"`
	State                string   `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	SeqId                string   `protobuf:"bytes,3,opt,name=seq_id,json=seqId,proto3" json:"seq_id,omitempty"`
	EncodedTransaction   []string `protobuf:"bytes,4,rep,name=encoded_transaction,json=encodedTransaction,proto3" json:"encoded_transaction,omitempty"`
	Txid                 string   `protobuf:"bytes,5,opt,name=txid,proto3" json:"txid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IostInvokeResult) Reset()         { *m = IostInvokeResult{} }
func (m *IostInvokeResult) String() string { return proto.CompactTextString(m) }
func (*IostInvokeResult) ProtoMessage()    {}
func (*IostInvokeResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_iost_contract_4ac5b02d38c46a9d, []int{2}
}
func (m *IostInvokeResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IostInvokeResult.Unmarshal(m, b)
}
func (m *IostInvokeResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IostInvokeResult.Marshal(b, m, deterministic)
}
func (dst *IostInvokeResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IostInvokeResult.Merge(dst, src)
}
func (m *IostInvokeResult) XXX_Size() int {
	return xxx_messageInfo_IostInvokeResult.Size(m)
}
func (m *IostInvokeResult) XXX_DiscardUnknown() {
	xxx_messageInfo_IostInvokeResult.DiscardUnknown(m)
}

var xxx_messageInfo_IostInvokeResult proto.InternalMessageInfo

func (m *IostInvokeResult) GetScript() string {
	if m != nil {
		return m.Script
	}
	return ""
}

func (m *IostInvokeResult) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *IostInvokeResult) GetSeqId() string {
	if m != nil {
		return m.SeqId
	}
	return ""
}

func (m *IostInvokeResult) GetEncodedTransaction() []string {
	if m != nil {
		return m.EncodedTransaction
	}
	return nil
}

func (m *IostInvokeResult) GetTxid() string {
	if m != nil {
		return m.Txid
	}
	return ""
}

func init() {
	proto.RegisterType((*IostAction)(nil), "contract.api.IostAction")
	proto.RegisterType((*IostInvokeParam)(nil), "contract.api.IostInvokeParam")
	proto.RegisterType((*IostInvokeResult)(nil), "contract.api.IostInvokeResult")
	proto.RegisterEnum("contract.api.SignAlgorithmType", SignAlgorithmType_name, SignAlgorithmType_value)
}

func init() {
	proto.RegisterFile("chain-contract/iost-contract.proto", fileDescriptor_iost_contract_4ac5b02d38c46a9d)
}

var fileDescriptor_iost_contract_4ac5b02d38c46a9d = []byte{
	// 468 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x52, 0x5d, 0x6b, 0xdb, 0x30,
	0x14, 0x5d, 0x5a, 0x27, 0xad, 0x6f, 0xf6, 0x91, 0xa8, 0x5b, 0x31, 0x61, 0xa3, 0x59, 0x9e, 0x42,
	0x21, 0x36, 0xf5, 0x96, 0xc1, 0xd8, 0x5e, 0x9a, 0xb1, 0x87, 0x30, 0x18, 0xc5, 0xed, 0xd3, 0x60,
	0x18, 0x59, 0x12, 0x8e, 0x48, 0x2c, 0xb9, 0x96, 0x32, 0x92, 0xff, 0xb1, 0xc7, 0xfd, 0xd8, 0x21,
	0xc9, 0x4e, 0xda, 0x8c, 0xbd, 0xdd, 0x73, 0xcf, 0x3d, 0x3e, 0xf7, 0x1e, 0x0b, 0x46, 0x64, 0x81,
	0xb9, 0x98, 0x10, 0x29, 0x74, 0x85, 0x89, 0x8e, 0xb8, 0x54, 0x7a, 0x87, 0xc2, 0xb2, 0x92, 0x5a,
	0xa2, 0xa7, 0x3b, 0x8c, 0x4b, 0x3e, 0x78, 0x7b, 0xa0, 0x10, 0x4c, 0x1e, 0x08, 0x06, 0x67, 0x6a,
	0x81, 0x2b, 0x46, 0x23, 0xa5, 0xb1, 0x5e, 0x2b, 0xd7, 0x1c, 0xfd, 0x04, 0x98, 0x4b, 0xa5, 0xaf,
	0x89, 0xe6, 0x52, 0xa0, 0x01, 0x9c, 0x36, 0xa2, 0xa0, 0x35, 0x6c, 0x8d, 0xfd, 0x64, 0x87, 0xd1,
	0x05, 0x74, 0xb1, 0x9d, 0x4a, 0x05, 0x2e, 0x58, 0x70, 0x64, 0x69, 0x70, 0xad, 0xef, 0xb8, 0x60,
	0x08, 0x81, 0x47, 0xb1, 0xc6, 0xc1, 0xb1, 0x65, 0x6c, 0x3d, 0xfa, 0x7d, 0x04, 0x2f, 0xcc, 0xf7,
	0xe7, 0xe2, 0x97, 0x5c, 0xb2, 0x1b, 0x5c, 0xe1, 0x02, 0x5d, 0x82, 0xa7, 0xb7, 0x25, 0xb3, 0x06,
	0xcf, 0xe3, 0xf3, 0xd0, 0xad, 0x65, 0xae, 0x08, 0xdd, 0xd8, 0xdd, 0xb6, 0x64, 0x89, 0x9d, 0x41,
	0x6f, 0x00, 0xca, 0x75, 0xb6, 0xe2, 0x24, 0x5d, 0xb2, 0x6d, 0xed, 0xe9, 0xbb, 0xce, 0x37, 0xb6,
	0x45, 0xaf, 0xa0, 0xa3, 0xd8, 0x7d, 0xca, 0x69, 0x6d, 0xda, 0x56, 0xec, 0x7e, 0x4e, 0xd1, 0x67,
	0xf0, 0x15, 0xcf, 0x45, 0x6a, 0x6d, 0x3c, 0x6b, 0x73, 0x11, 0x3e, 0x8c, 0x2b, 0xbc, 0xe5, 0xb9,
	0xb8, 0x5e, 0xe5, 0xb2, 0xe2, 0x7a, 0x51, 0x58, 0xbf, 0x53, 0xa3, 0x30, 0x15, 0x9a, 0x00, 0x32,
	0x35, 0xa3, 0xa9, 0xae, 0xb0, 0x50, 0xee, 0xc2, 0xa0, 0x3d, 0x3c, 0x1e, 0xfb, 0x49, 0xdf, 0x31,
	0x77, 0x7b, 0x02, 0xc5, 0x70, 0xe2, 0x2a, 0x15, 0x74, 0x86, 0xc7, 0xe3, 0x6e, 0x1c, 0x3c, 0xb6,
	0xda, 0xc7, 0x9b, 0x34, 0x83, 0xa3, 0x3f, 0x2d, 0xe8, 0xed, 0x63, 0x49, 0x98, 0x5a, 0xaf, 0x34,
	0x3a, 0x87, 0x8e, 0x22, 0x15, 0x2f, 0x9b, 0xe8, 0x6b, 0x84, 0x5e, 0x42, 0xdb, 0xfc, 0xb2, 0x26,
	0x72, 0x07, 0xfe, 0x77, 0x7a, 0x04, 0x67, 0x4c, 0x10, 0x49, 0x0f, 0xb6, 0xf7, 0xec, 0xf6, 0xa8,
	0xa6, 0x1e, 0xae, 0x8f, 0xc0, 0xd3, 0x1b, 0x4e, 0x83, 0xb6, 0xfb, 0x6b, 0xa6, 0xbe, 0x8c, 0xa0,
	0xff, 0x4f, 0x40, 0xe8, 0x19, 0xf8, 0xb7, 0x8c, 0x94, 0xf1, 0xf4, 0xc3, 0xf2, 0xaa, 0xf7, 0x04,
	0x75, 0xe1, 0xe4, 0x2b, 0x8d, 0xa7, 0xd3, 0xab, 0x8f, 0xbd, 0xd6, 0x6c, 0x0d, 0xaf, 0x89, 0x2c,
	0xc2, 0x8c, 0x67, 0x72, 0x13, 0x52, 0xb6, 0x71, 0x8f, 0x6b, 0x97, 0xc3, 0xac, 0x6f, 0x8e, 0xfd,
	0x52, 0xa3, 0x1b, 0xc3, 0xfd, 0x98, 0xe5, 0x5c, 0xd7, 0x02, 0x22, 0x8b, 0x28, 0xe3, 0xf9, 0xfb,
	0xc8, 0xaa, 0xcc, 0x86, 0x61, 0xce, 0x75, 0xf4, 0xf8, 0x45, 0x4f, 0x72, 0xf9, 0xa9, 0xcc, 0x6c,
	0xaf, 0x69, 0x65, 0x1d, 0x2b, 0x78, 0xf7, 0x37, 0x00, 0x00, 0xff, 0xff, 0x63, 0x89, 0x39, 0x1f,
	0x2f, 0x03, 0x00, 0x00,
}
