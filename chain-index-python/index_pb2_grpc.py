# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from chain_index import index_pb2 as chain__index_dot_index__pb2


class ChainIndexServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SubscribeEvent = channel.unary_stream(
        '/chainindex.api.ChainIndexService/SubscribeEvent',
        request_serializer=chain__index_dot_index__pb2.SubscribeEventRequest.SerializeToString,
        response_deserializer=chain__index_dot_index__pb2.SubscribeEventReponse.FromString,
        )


class ChainIndexServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def SubscribeEvent(self, request, context):
    """订阅事件
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ChainIndexServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SubscribeEvent': grpc.unary_stream_rpc_method_handler(
          servicer.SubscribeEvent,
          request_deserializer=chain__index_dot_index__pb2.SubscribeEventRequest.FromString,
          response_serializer=chain__index_dot_index__pb2.SubscribeEventReponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'chainindex.api.ChainIndexService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
