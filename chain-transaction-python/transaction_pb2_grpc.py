# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from chain_transaction import transaction_pb2 as chain__transaction_dot_transaction__pb2


class TransactionServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.QueryTransactionFee = channel.unary_unary(
        '/transaction.api.TransactionService/QueryTransactionFee',
        request_serializer=chain__transaction_dot_transaction__pb2.QueryTransactionFeeRequest.SerializeToString,
        response_deserializer=chain__transaction_dot_transaction__pb2.QueryTransactionFeeResponse.FromString,
        )
    self.CreateTransaction = channel.unary_unary(
        '/transaction.api.TransactionService/CreateTransaction',
        request_serializer=chain__transaction_dot_transaction__pb2.CreateTransactionRequest.SerializeToString,
        response_deserializer=chain__transaction_dot_transaction__pb2.CreateTransactionResponse.FromString,
        )
    self.CreateInvokeTransaction = channel.unary_unary(
        '/transaction.api.TransactionService/CreateInvokeTransaction',
        request_serializer=chain__transaction_dot_transaction__pb2.CreateInvokeTxRequest.SerializeToString,
        response_deserializer=chain__transaction_dot_transaction__pb2.CreateInvokeTxResponse.FromString,
        )
    self.BroadcastTransaction = channel.unary_unary(
        '/transaction.api.TransactionService/BroadcastTransaction',
        request_serializer=chain__transaction_dot_transaction__pb2.BroadcastTransactionRequest.SerializeToString,
        response_deserializer=chain__transaction_dot_transaction__pb2.BroadcastTransactionResponse.FromString,
        )


class TransactionServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def QueryTransactionFee(self, request, context):
    """查询转账手续费
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateTransaction(self, request, context):
    """生成交易
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateInvokeTransaction(self, request, context):
    """生成合约调用交易
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def BroadcastTransaction(self, request, context):
    """向链节点广播交易
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TransactionServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'QueryTransactionFee': grpc.unary_unary_rpc_method_handler(
          servicer.QueryTransactionFee,
          request_deserializer=chain__transaction_dot_transaction__pb2.QueryTransactionFeeRequest.FromString,
          response_serializer=chain__transaction_dot_transaction__pb2.QueryTransactionFeeResponse.SerializeToString,
      ),
      'CreateTransaction': grpc.unary_unary_rpc_method_handler(
          servicer.CreateTransaction,
          request_deserializer=chain__transaction_dot_transaction__pb2.CreateTransactionRequest.FromString,
          response_serializer=chain__transaction_dot_transaction__pb2.CreateTransactionResponse.SerializeToString,
      ),
      'CreateInvokeTransaction': grpc.unary_unary_rpc_method_handler(
          servicer.CreateInvokeTransaction,
          request_deserializer=chain__transaction_dot_transaction__pb2.CreateInvokeTxRequest.FromString,
          response_serializer=chain__transaction_dot_transaction__pb2.CreateInvokeTxResponse.SerializeToString,
      ),
      'BroadcastTransaction': grpc.unary_unary_rpc_method_handler(
          servicer.BroadcastTransaction,
          request_deserializer=chain__transaction_dot_transaction__pb2.BroadcastTransactionRequest.FromString,
          response_serializer=chain__transaction_dot_transaction__pb2.BroadcastTransactionResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'transaction.api.TransactionService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
